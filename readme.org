- The React Blazing upupup
- Process
  : (x) create-react-app
  : all configure project manually
- A modern build pipeline typically consists of:
  : A package manager => yarn | npm <- to take use of third party packages
  : A bundler => webpack | browserify <- wirte modular code 
  :                                   <- build them into together
  :                                   <- optimize load time
  : A compiler => modern js
  *for me*  => yarn + webpack + babel

- project setup
  : yarn add react react-dom => main dependencies
  : yarn add -D babel-cli babel-preset-react babel-preset-env <= compiler & compile plugins(esnext + jsx)
  :             <-  .babelrc => "presets": ["env", "react"]
  :             <-  package.config => "scripts": "babel src -d lib"
  : mkdir src && cd $_ && emacs index.jsx 
  #+BEGIN_SRC rjsx
    import React from 'react';
    import ReactDOM from 'react-dom';

    ReactDOM.render(
      <h1>Hello, world!</h1>,
      document.getElementById('root')
    );


  #+END_SRC
  : cd .. && emacs index.html
  #+BEGIN_SRC html
    <body>
      <div id="root"></div>
      <script src="./node_modules/react/umd/react.production.min.js"></script> <!-- Error#1: umd <=> (x) require -->
      <script src="./node_modules/react-dom/umd/react-dom.production.min.js"></script> <!-- Error#2 cjs =(x)=> browser-->
      <script src="./lib/index.js"></script>
    </body>
  #+END_SRC
  
- encounting error
  : babel build -> requir() <=== transpile to cjs(common js pec)
  : Babel isn't a module bundler <== webpack | browserify
  : Browserify? -> Browserify lets you require('modules') in the browser by bundling up all of your dependencies.
- install bundler
  : yarn add browserify
  : "scripts": "babel src -d lib | broserify"
  
